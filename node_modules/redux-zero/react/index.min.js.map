{"version":3,"file":"index.min.js","sources":["../src/utils/shallowEqual.ts","../src/utils/propsValidation.ts","../src/react/components/connect.tsx","../src/react/components/Provider.tsx"],"sourcesContent":["export default function shallowEqual(a, b) {\n  for (const i in a) if (a[i] !== b[i]) return false\n  for (const i in b) if (!(i in a)) return false\n  return true\n}\n","export default function propsValidation(\n  props: object,\n  propName: string,\n  componentName: string\n) {\n  if (typeof props === \"object\") {\n    return null\n  }\n  return new Error(`Invalid prop ${propName} supplied to ${componentName}`)\n}\n","import * as React from \"react\"\n\nimport shallowEqual from \"../../utils/shallowEqual\"\nimport propValidation from \"../../utils/propsValidation\"\n\nexport class Connect extends React.Component<any> {\n  static contextTypes = {\n    store: propValidation\n  }\n  unsubscribe\n  state = this.getProps()\n  componentWillMount() {\n    this.unsubscribe = this.context.store.subscribe(this.update)\n  }\n  componentWillUnmount() {\n    this.unsubscribe(this.update)\n  }\n  getProps() {\n    const { mapToProps } = this.props\n    const state = (this.context.store && this.context.store.getState()) || {}\n    return mapToProps(state, this.props)\n  }\n  update = () => {\n    const mapped = this.getProps()\n    if (!shallowEqual(mapped, this.state)) {\n      this.setState(mapped)\n    }\n  }\n  render() {\n    return this.props.children({ store: this.context.store, ...this.state })\n  }\n}\n\nexport default function connect(mapToProps) {\n  return Child => props => (\n    <Connect mapToProps={mapToProps}>\n      {mappedProps => <Child {...mappedProps} {...props} />}\n    </Connect>\n  )\n}\n","import * as React from \"react\"\n\nimport Props from \"../../interfaces/Props\"\nimport Store from \"../../interfaces/Store\"\nimport propValidation from \"../../utils/propsValidation\"\n\nexport default class Provider extends React.Component<Props, {}> {\n  static childContextTypes = {\n    store: propValidation\n  }\n  getChildContext() {\n    const { store } = this.props\n    return { store }\n  }\n  render() {\n    const { children } = this.props\n    return React.Children.only(children)\n  }\n}\n"],"names":["a","b","i","props","propName","componentName","Error","_this","getProps","mapped","shallowEqual","state","setState","tslib_1.__extends","Connect","this","unsubscribe","context","store","subscribe","update","mapToProps","getState","children","propValidation","React.Component","Provider","React.Children","only","Child","React.createElement","mappedProps"],"mappings":"2WAAqCA,EAAGC,GACtC,IAAK,IAAMC,KAAKF,EAAG,GAAIA,EAAEE,KAAOD,EAAEC,GAAI,OAAO,EAC7C,IAAK,IAAMA,KAAKD,EAAG,KAAMC,KAAKF,GAAI,OAAO,EACzC,OAAO,aCFPG,EACAC,EACAC,GAEA,MAAqB,iBAAVF,EACF,KAEF,IAAIG,MAAM,gBAAgBF,kBAAwBC,iVCH3D,aAAA,qDAKEE,QAAQA,EAAKC,WAYbD,SAAS,WACP,IAAME,EAASF,EAAKC,WACfE,EAAaD,EAAQF,EAAKI,QAC7BJ,EAAKK,SAASH,MAMpB,OA1B6BI,OAM3BC,+BAAA,WACEC,KAAKC,YAAcD,KAAKE,QAAQC,MAAMC,UAAUJ,KAAKK,SAEvDN,iCAAA,WACEC,KAAKC,YAAYD,KAAKK,SAExBN,qBAAA,WAGE,OAAOO,yBADQN,KAAKE,QAAQC,OAASH,KAAKE,QAAQC,MAAMI,eAC/BP,KAAKZ,QAQhCW,mBAAA,WACE,OAAOC,KAAKZ,MAAMoB,YAAWL,MAAOH,KAAKE,QAAQC,OAAUH,KAAKJ,SAvB3DG,gBACLI,MAAOM,MAFkBC,2BCC7B,4DAYA,OAZsCZ,OAIpCa,4BAAA,WAEE,OAASR,yBAEXQ,mBAAA,WACU,IAAAH,sBACR,OAAOI,WAAeC,KAAKL,IATtBG,qBACLR,MAAOM,MAF2BC,gCD2BNJ,GAC9B,OAAO,SAAAQ,GAAS,OAAA,SAAA1B,GAAS,OACvB2B,gBAAChB,GAAQO,WAAYA,GAClB,SAAAU,GAAe,OAAAD,gBAACD,OAAUE,EAAiB5B"}